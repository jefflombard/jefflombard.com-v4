{"version":3,"sources":["components/Menu.js","components/Quote.js","components/Loading.js","components/Book.js","components/BookList.js","scenes/Books.js","scenes/Home.js","components/ProjectTag.js","components/ProjectTagsFilter.js","components/Project.js","components/ProjectsList.js","scenes/Projects.js","components/Post.js","components/PostList.js","scenes/Writing.js","App.js","serviceWorker.js","index.js"],"names":["Menu","_ref","items","react_default","a","createElement","className","__source","fileName","_jsxFileName","lineNumber","map","item","key","path","Link","to","label","build","xs","Quote","text","Quote_jsxFileName","Loading","Loading_jsxFileName","Book","id","content","Book_jsxFileName","interweave_lib","BooksList","books","href","rel","target","BookList_jsxFileName","_ref2","components_Book","Books","Books_jsxFileName","components_Quote","react_apollo_browser_umd","query","gql","_templateObject","loading","error","data","components_Loading","console","log","BookList","Home","Home_jsxFileName","ProjectTagsFilter","tag","title","onClick","ProjectTag_jsxFileName","type","data-tag","tags","ProjectTagsFilter_jsxFileName","sm","ProjectTag","Project","description","url","gitUrl","Project_jsxFileName","ProjectsList","projects","filter","ProjectsList_jsxFileName","project","includes","components_Project","Projects","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tagHandler","bind","assertThisInitialized","state","e","preventDefault","blur","dataset","setState","_this2","Projects_jsxFileName","Projects_templateObject","allTagsSorted","_","flatMapDeep","get","sort","uniqueTags","uniq","components_ProjectTagsFilter","components_ProjectsList","Component","Post","Post_jsxFileName","PostList","posts","PostList_jsxFileName","components_Post","Writing","Writing_jsxFileName","Writing_templateObject","components_PostList","client","ApolloClient","uri","App","App_jsxFileName","BrowserRouter","components_Menu","Route","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5fe1bf84.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Hidden } from 'react-grid-system';\n\nconst Menu = ({ items }) => (\n  <div className=\"nav-menu\">\n    <div>\n      {\n        items.map(item => (\n          <li key={item.path}>\n            <Link to={item.path}>{item.label}</Link>\n          </li>\n        ))\n      }\n    </div>\n    <Hidden xs>\n      <div className=\"line\" />\n      <div className=\"text-section\">\n        <p className=\"bold\">jeff lombard</p>\n        <p className=\"small thin\">jefflombardjr(at)</p>\n        <p className=\"small thin\">gmail(dot)com</p>\n      </div>\n      <div className=\"text-section\">\n        <p className=\"bold\">location</p>\n        <p className=\"small thin\">philadelphia, pa</p>\n      </div>\n    </Hidden>\n  </div>\n);\n\nexport default Menu;\n","import React from 'react';\n\nconst Quote = ({ text }) => (\n  <div className=\"quote\">\n    <p className=\"quote-text\">{text}</p>\n  </div>\n);\n\nexport default Quote;\n","import React from 'react';\n\nconst Loading = () => (\n  <div className=\"loading-container\">\n    <span className=\"thin\">loading...</span>\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\n\nimport { Markup } from 'interweave';\n\nconst Book = ({ id, content }) => (\n  <div key={id} className=\"book\"><Markup content={content} /></div>\n);\n\nexport default Book;\n","import React from 'react';\n\nimport Book from './Book';\n\nconst BooksList = ({ books }) => (\n  <a\n    className=\"books-link\"\n    href=\"https://www.goodreads.com/user/show/57558558-jeff\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <ul className=\"books-container\">\n      {books.map(({ id, content }) => (\n        <Book id={id} content={content} />\n      ))}\n    </ul>\n  </a>\n);\n\nexport default BooksList;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport Quote from '../components/Quote';\nimport Loading from '../components/Loading';\nimport BookList from '../components/BookList';\n\nconst Books = () => (\n  <div className=\"books\">\n    <Quote text=\"I love to read.\" />\n\n    <Query\n      query={gql`\n        {\n          books{\n            id\n            content\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <p>Error: Tell Jeff to fix his database connection.</p>;\n        console.log('Hey, if you\\'re reading this... validateDOMNesting() Error is Caused by the markup coming in from the Good Reads API. Not my code :)');\n        return <BookList books={data.books} />;\n      }}\n    </Query>\n  </div>\n);\n\nexport default Books;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"home\">\n    <h1 className=\"home-header\">Jeff Lombard</h1>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst ProjectTagsFilter = ({ tag, title, onClick }) => (\n  <li className=\"project-tag\">\n    <button type=\"button\" data-tag={tag} onClick={onClick}>{title || tag}</button>\n  </li>\n);\n\nexport default ProjectTagsFilter;\n","import React from 'react';\nimport { Row, Col } from 'react-grid-system';\n\nimport ProjectTag from './ProjectTag';\n\nconst ProjectTagsFilter = ({ tags, onClick }) => (\n  <Row>\n    <Col sm={2}>\n      <p className=\"filter-text\">filter by skill</p>\n    </Col>\n    <Col sm={10}>\n      <ul className=\"project-tags-filter\">\n        { tags.map(tag => <ProjectTag key={tag} tag={tag} onClick={onClick} />)}\n        <ProjectTag key=\"clear\" tag={false} title=\"clear all\" onClick={onClick} />\n      </ul>\n    </Col>\n  </Row>\n);\n\nexport default ProjectTagsFilter;\n","import React from 'react';\n\nconst Project = ({\n  title,\n  description,\n  url,\n  gitUrl,\n  tags,\n}) => (\n  <li className=\"project\">\n    <p className=\"project-title\">{title}</p>\n    <p className=\"project-description small thin\">{description}</p>\n    <p className=\"project-tags small thin\">\n      <span className=\"project-tag\">tags:</span>\n      {tags.map(tag => <span className=\"project-tag\">{tag}</span>)}\n    </p>\n    <div className=\"project-link-holder\">\n      { url && <a className=\"project-link\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">View Project</a>}\n      { gitUrl && <a className=\"project-link\" href={gitUrl} target=\"_blank\" rel=\"noopener noreferrer\">View Source Code</a>}\n    </div>\n  </li>\n);\n\nexport default Project;\n","import React from 'react';\n\nimport Project from './Project';\n\nconst ProjectsList = ({ projects, filter }) => (\n  <ul className=\"project-list\">\n    { projects\n      .filter(project => project.tags.includes(filter) || filter === 'false')\n      .map((project) => {\n        const {\n          title,\n          id,\n          description,\n          url,\n          gitUrl,\n          tags,\n        } = project;\n        return (\n          <Project\n            key={id}\n            title={title}\n            description={description}\n            url={url}\n            gitUrl={gitUrl}\n            tags={tags}\n          />\n        );\n      })\n    }\n  </ul>\n);\n\nexport default ProjectsList;\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport _ from 'lodash';\n\nimport Quote from '../components/Quote';\nimport Loading from '../components/Loading';\nimport ProjectTagsFilter from '../components/ProjectTagsFilter';\nimport ProjectsList from '../components/ProjectsList';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.tagHandler = this.tagHandler.bind(this);\n    this.state = {\n      filter: 'false',\n    };\n  }\n\n  tagHandler(e) {\n    e.preventDefault();\n    e.target.blur();\n    const tag = e.target.dataset.tag; // eslint-disable-line\n    this.setState({\n      filter: tag,\n    });\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"projects\">\n        <Quote text=\"Things I've been working on.\" />\n        <Query\n          query={gql`\n            {\n              projects{\n                id\n                title\n                description\n                tags\n                url\n                gitUrl\n              }\n            }\n          `}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <Loading />;\n            if (error) return <p>Error: Tell Jeff to fix his database connection.</p>;\n\n            const allTags = _.flatMapDeep(data.projects, project => _.get(project, 'tags'));\n            const allTagsSorted = allTags.sort();\n            const uniqueTags = _.uniq(allTagsSorted);\n\n            return (\n              <div>\n                <ProjectTagsFilter tags={uniqueTags} onClick={this.tagHandler} />\n                <ProjectsList projects={data.projects} filter={filter} />\n              </div>);\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\n\nconst Post = ({\n  id,\n  title,\n  url,\n  description,\n}) => (\n  <li className=\"post\" key={id}>\n    <a\n      className=\"post-link\"\n      href={url}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n    >\n      <p>{title}</p>\n      <p>{description}</p>\n    </a>\n  </li>\n);\n\nexport default Post;\n","import React from 'react';\n\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <ul className=\"posts\">\n    {posts.map(({\n      id,\n      title,\n      url,\n      description,\n    }) => (\n      <Post key={id} title={title} url={url} description={description} />\n    ))}\n  </ul>\n);\n\nexport default PostList;\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport Quote from '../components/Quote';\nimport Loading from '../components/Loading';\nimport PostList from '../components/PostList';\n\nconst Writing = () => (\n  <div className=\"posts\">\n    <Quote text=\"Recent thoughts and musings.\" />\n    <Query\n      query={gql`\n        {\n          posts{\n            id\n            title\n            url\n            date\n            tags\n          }\n        }\n      `}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <p>Error: Tell Jeff to fix his database connection.</p>;\n        return <PostList posts={data.posts} />;\n      }}\n    </Query>\n  </div>\n);\n\nexport default Writing;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Component Imports\nimport { Row, Col } from 'react-grid-system';\nimport Menu from './components/Menu';\n\n// Scene Imports\nimport {\n  Books,\n  Home,\n  Projects,\n  Writing,\n} from './scenes'; // eslint-disable-line import/named\n\n// Setup GraphQL\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n});\n\nconst App = () => {\n  const menuItems = [\n    { path: '/', label: 'home' },\n    { path: '/projects/', label: 'projects' },\n    { path: '/books', label: 'books' },\n    { path: '/writing', label: 'writing' },\n  ];\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"main\">\n          <Row>\n            <Col sm={3}>\n              <Menu items={menuItems} />\n            </Col>\n            <Col sm={9}>\n              <div className=\"main-container\">\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/projects/\" component={Projects} />\n                <Route path=\"/books\" component={Books} />\n                <Route path=\"/writing\" component={Writing} />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')); // eslint-disable-line\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}